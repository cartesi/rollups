{
    "contractName": "CartesiDApp",
    "sourceName": "contracts/dapp/CartesiDApp.sol",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract IConsensus",
                    "name": "_consensus",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "_templateHash",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "contract IConsensus",
                    "name": "newConsensus",
                    "type": "address"
                }
            ],
            "name": "NewConsensus",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "voucherId",
                    "type": "uint256"
                }
            ],
            "name": "VoucherExecuted",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_destination",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_payload",
                    "type": "bytes"
                },
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "inputIndex",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "outputIndex",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "outputHashesRootHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "vouchersEpochRootHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "noticesEpochRootHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "machineStateHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "keccakInHashesSiblings",
                                    "type": "bytes32[]"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "outputHashesInEpochSiblings",
                                    "type": "bytes32[]"
                                }
                            ],
                            "internalType": "struct OutputValidityProof",
                            "name": "validity",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bytes",
                            "name": "context",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct Proof",
                    "name": "_proof",
                    "type": "tuple"
                }
            ],
            "name": "executeVoucher",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getConsensus",
            "outputs": [
                {
                    "internalType": "contract IConsensus",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getTemplateHash",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IConsensus",
                    "name": "_newConsensus",
                    "type": "address"
                }
            ],
            "name": "migrateToConsensus",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onERC1155BatchReceived",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onERC1155Received",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onERC721Received",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "_notice",
                    "type": "bytes"
                },
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "inputIndex",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "outputIndex",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "outputHashesRootHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "vouchersEpochRootHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "noticesEpochRootHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "machineStateHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "keccakInHashesSiblings",
                                    "type": "bytes32[]"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "outputHashesInEpochSiblings",
                                    "type": "bytes32[]"
                                }
                            ],
                            "internalType": "struct OutputValidityProof",
                            "name": "validity",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bytes",
                            "name": "context",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct Proof",
                    "name": "_proof",
                    "type": "tuple"
                }
            ],
            "name": "validateNotice",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_inboxInputIndex",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_outputIndex",
                    "type": "uint256"
                }
            ],
            "name": "wasVoucherExecuted",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_receiver",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_value",
                    "type": "uint256"
                }
            ],
            "name": "withdrawEther",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200150138038062001501833981016040819052620000349162000215565b60016000556200004433620000cc565b6200004f826200011e565b6080819052600380546001600160a01b0319166001600160a01b0385169081179091556040805163b688a36360e01b8152905163b688a3639160048082019260009290919082900301818387803b158015620000aa57600080fd5b505af1158015620000bf573d6000803e3d6000fd5b505050505050506200025d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000128620001a1565b6001600160a01b038116620001935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200019e81620000cc565b50565b6001546001600160a01b03163314620001fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200018a565b565b6001600160a01b03811681146200019e57600080fd5b6000806000606084860312156200022b57600080fd5b83516200023881620001ff565b60208501519093506200024b81620001ff565b80925050604084015190509250925092565b60805161128862000279600039600061018c01526112886000f3fe6080604052600436106100a05760003560e01c8063715018a611610064578063715018a6146101b55780638da5cb5b146101ca57806396487d46146101e85780639d9b114514610208578063f2fde38b14610228578063fc4116831461024857600080fd5b80631250482f146100ac578063150b7a02146100e1578063179e740b14610126578063522f68151461015857806361b12c661461017a57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610de5565b610268565b60405190151581526020015b60405180910390f35b3480156100ed57600080fd5b5061010d6100fc366004610e61565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100d8565b34801561013257600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020016100d8565b34801561016457600080fd5b50610178610173366004610ed4565b610483565b005b34801561018657600080fd5b506040517f000000000000000000000000000000000000000000000000000000000000000081526020016100d8565b3480156101c157600080fd5b5061017861055f565b3480156101d657600080fd5b506001546001600160a01b0316610140565b3480156101f457600080fd5b506100cc610203366004610f00565b610573565b34801561021457600080fd5b506100cc610223366004610f69565b6105c4565b34801561023457600080fd5b50610178610243366004610f8b565b6105e0565b34801561025457600080fd5b50610178610263366004610f8b565b610659565b600061027261070e565b600080808061028c6102876020880188610faf565b610767565b919550935091506102a983836102a28980610ff6565b91906107ee565b90506102c5898989876102bc8b80610ff6565b93929190610864565b60006102fa6102d48880610ff6565b6102e5906040810190602001611016565b67ffffffffffffffff168360809190911b1790565b90506103058161089a565b156103575760405162461bcd60e51b815260206004820152601860248201527f72652d657865637574696f6e206e6f7420616c6c6f776564000000000000000060448201526064015b60405180910390fd5b60008a6001600160a01b03168a8a604051610373929190611040565b6000604051808303816000865af19150503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b50509050801561046a576040516306449da160e41b815260026004820152602481018390526001604482015273__$f57eb21c11c6dae369da3ca36f4f48eb77$__90636449da109060640160006040518083038186803b15801561041857600080fd5b505af415801561042c573d6000803e3d6000fd5b505050507f0eb7ee080f865f1cadc4f54daf58cc3b8879e888832867d13351edcec0fbdc548260405161046191815260200190565b60405180910390a15b9550505050505061047b6001600055565b949350505050565b3330146104c05760405162461bcd60e51b815260206004820152600b60248201526a37b7363c9034ba39b2b63360a91b604482015260640161034e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461050d576040519150601f19603f3d011682016040523d82523d6000602084013e610512565b606091505b505090508061055a5760405162461bcd60e51b81526020600482015260146024820152731dda5d1a191c985dd15d1a195c8819985a5b195960621b604482015260640161034e565b505050565b610567610918565b6105716000610972565b565b60008080806105886102876020870187610faf565b9194509250905061059e82826102a28880610ff6565b506105b78787856105af8980610ff6565b9291906109c4565b5060019695505050505050565b6000608082901b83176105d68161089a565b9150505b92915050565b6105e8610918565b6001600160a01b03811661064d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034e565b61065681610972565b50565b610661610918565b600380546001600160a01b0319166001600160a01b0383169081179091556040805163b688a36360e01b8152905163b688a3639160048082019260009290919082900301818387803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50506040516001600160a01b03841681527f4991c6f37185659e276ff918a96f3e20e6c5abcd8c9aab450dc19c2f7ad35cb59250602001905060405180910390a150565b6002600054036107605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034e565b6002600055565b60035460405163035e6a0960e61b8152600091829182916001600160a01b03169063d79a8240906107a090309089908990600401611079565b606060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e191906110a7565b9250925092509250925092565b6000806107fe6020860186611016565b6108129067ffffffffffffffff16856110d5565b90508281111561047b5760405162461bcd60e51b815260206004820152601f60248201527f696e626f7820696e70757420696e646578206f7574206f6620626f756e647300604482015260640161034e565b60006108718585856109eb565b9050610892868284606083013560255b67ffffffffffffffff166015610a1a565b505050505050565b6040516303fbaf7360e01b8152600260048201526024810182905260009073__$f57eb21c11c6dae369da3ca36f4f48eb77$__906303fbaf7390604401602060405180830381865af41580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da91906110f6565b6001546001600160a01b031633146105715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006109d08484610d43565b90506109e485828460808301356025610881565b5050505050565b6060838383604051602001610a0293929190611079565b60405160208183030381529060405290509392505050565b6040805160608089013560208301526080808a01359383019390935260a0890135908201528591016040516020818303038152906040528051906020012014610a9b5760405162461bcd60e51b81526020600482015260136024820152720d2dcc6dee4e4cac6e840cae0dec6d090c2e6d606b1b604482015260640161034e565b8273__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610ad7610ac660208b018b611016565b60051b681fffffffffffffffe01690565b60058660408c0135610aec60e08e018e611118565b6040518763ffffffff1660e01b8152600401610b0d96959493929190611162565b602060405180830381865af4158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e91906111c6565b14610b9b5760405162461bcd60e51b815260206004820152601e60248201527f696e636f7272656374206f75747075747345706f6368526f6f74486173680000604482015260640161034e565b600073__$2a7ef22e717e9afc55afc95d018bf1a85b$__63c84583a18780519060200120604051602001610bd191815260200190565b60408051601f19818403018152908290526001600160e01b031960e084901b168252610c02916005906004016111df565b602060405180830381865af4158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4391906111c6565b9050866040013573__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610c7a8a6020016020810190610ac69190611016565b60058686610c8b60c08f018f611118565b6040518763ffffffff1660e01b8152600401610cac96959493929190611162565b602060405180830381865af4158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced91906111c6565b14610d3a5760405162461bcd60e51b815260206004820152601e60248201527f696e636f7272656374206f7574707574486173686573526f6f74486173680000604482015260640161034e565b50505050505050565b60608282604051602001610d5892919061123e565b604051602081830303815290604052905092915050565b6001600160a01b038116811461065657600080fd5b60008083601f840112610d9657600080fd5b50813567ffffffffffffffff811115610dae57600080fd5b602083019150836020828501011115610dc657600080fd5b9250929050565b600060408284031215610ddf57600080fd5b50919050565b60008060008060608587031215610dfb57600080fd5b8435610e0681610d6f565b9350602085013567ffffffffffffffff80821115610e2357600080fd5b610e2f88838901610d84565b90955093506040870135915080821115610e4857600080fd5b50610e5587828801610dcd565b91505092959194509250565b600080600080600060808688031215610e7957600080fd5b8535610e8481610d6f565b94506020860135610e9481610d6f565b935060408601359250606086013567ffffffffffffffff811115610eb757600080fd5b610ec388828901610d84565b969995985093965092949392505050565b60008060408385031215610ee757600080fd5b8235610ef281610d6f565b946020939093013593505050565b600080600060408486031215610f1557600080fd5b833567ffffffffffffffff80821115610f2d57600080fd5b610f3987838801610d84565b90955093506020860135915080821115610f5257600080fd5b50610f5f86828701610dcd565b9150509250925092565b60008060408385031215610f7c57600080fd5b50508035926020909101359150565b600060208284031215610f9d57600080fd5b8135610fa881610d6f565b9392505050565b6000808335601e19843603018112610fc657600080fd5b83018035915067ffffffffffffffff821115610fe157600080fd5b602001915036819003821315610dc657600080fd5b6000823560fe1983360301811261100c57600080fd5b9190910192915050565b60006020828403121561102857600080fd5b813567ffffffffffffffff81168114610fa857600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009061109e9083018486611050565b95945050505050565b6000806000606084860312156110bc57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156105da57634e487b7160e01b600052601160045260246000fd5b60006020828403121561110857600080fd5b81518015158114610fa857600080fd5b6000808335601e1984360301811261112f57600080fd5b83018035915067ffffffffffffffff82111561114a57600080fd5b6020019150600581901b3603821315610dc657600080fd5b67ffffffffffffffff878116825286166020820152604081018590526060810184905260a060808201819052810182905260006001600160fb1b038311156111a957600080fd5b8260051b808560c08501379190910160c001979650505050505050565b6000602082840312156111d857600080fd5b5051919050565b604081526000835180604084015260005b8181101561120d57602081870181015160608684010152016111f0565b506000606082850101526060601f19601f83011684010191505067ffffffffffffffff831660208301529392505050565b60208152600061047b60208301848661105056fea264697066735822122070feffbe13eb7a8885b789e4c69147c7a06808b9e3e61caaf2f7997965a1610464736f6c63430008130033",
    "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063715018a611610064578063715018a6146101b55780638da5cb5b146101ca57806396487d46146101e85780639d9b114514610208578063f2fde38b14610228578063fc4116831461024857600080fd5b80631250482f146100ac578063150b7a02146100e1578063179e740b14610126578063522f68151461015857806361b12c661461017a57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610de5565b610268565b60405190151581526020015b60405180910390f35b3480156100ed57600080fd5b5061010d6100fc366004610e61565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100d8565b34801561013257600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020016100d8565b34801561016457600080fd5b50610178610173366004610ed4565b610483565b005b34801561018657600080fd5b506040517f000000000000000000000000000000000000000000000000000000000000000081526020016100d8565b3480156101c157600080fd5b5061017861055f565b3480156101d657600080fd5b506001546001600160a01b0316610140565b3480156101f457600080fd5b506100cc610203366004610f00565b610573565b34801561021457600080fd5b506100cc610223366004610f69565b6105c4565b34801561023457600080fd5b50610178610243366004610f8b565b6105e0565b34801561025457600080fd5b50610178610263366004610f8b565b610659565b600061027261070e565b600080808061028c6102876020880188610faf565b610767565b919550935091506102a983836102a28980610ff6565b91906107ee565b90506102c5898989876102bc8b80610ff6565b93929190610864565b60006102fa6102d48880610ff6565b6102e5906040810190602001611016565b67ffffffffffffffff168360809190911b1790565b90506103058161089a565b156103575760405162461bcd60e51b815260206004820152601860248201527f72652d657865637574696f6e206e6f7420616c6c6f776564000000000000000060448201526064015b60405180910390fd5b60008a6001600160a01b03168a8a604051610373929190611040565b6000604051808303816000865af19150503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b50509050801561046a576040516306449da160e41b815260026004820152602481018390526001604482015273__$f57eb21c11c6dae369da3ca36f4f48eb77$__90636449da109060640160006040518083038186803b15801561041857600080fd5b505af415801561042c573d6000803e3d6000fd5b505050507f0eb7ee080f865f1cadc4f54daf58cc3b8879e888832867d13351edcec0fbdc548260405161046191815260200190565b60405180910390a15b9550505050505061047b6001600055565b949350505050565b3330146104c05760405162461bcd60e51b815260206004820152600b60248201526a37b7363c9034ba39b2b63360a91b604482015260640161034e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461050d576040519150601f19603f3d011682016040523d82523d6000602084013e610512565b606091505b505090508061055a5760405162461bcd60e51b81526020600482015260146024820152731dda5d1a191c985dd15d1a195c8819985a5b195960621b604482015260640161034e565b505050565b610567610918565b6105716000610972565b565b60008080806105886102876020870187610faf565b9194509250905061059e82826102a28880610ff6565b506105b78787856105af8980610ff6565b9291906109c4565b5060019695505050505050565b6000608082901b83176105d68161089a565b9150505b92915050565b6105e8610918565b6001600160a01b03811661064d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034e565b61065681610972565b50565b610661610918565b600380546001600160a01b0319166001600160a01b0383169081179091556040805163b688a36360e01b8152905163b688a3639160048082019260009290919082900301818387803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50506040516001600160a01b03841681527f4991c6f37185659e276ff918a96f3e20e6c5abcd8c9aab450dc19c2f7ad35cb59250602001905060405180910390a150565b6002600054036107605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034e565b6002600055565b60035460405163035e6a0960e61b8152600091829182916001600160a01b03169063d79a8240906107a090309089908990600401611079565b606060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e191906110a7565b9250925092509250925092565b6000806107fe6020860186611016565b6108129067ffffffffffffffff16856110d5565b90508281111561047b5760405162461bcd60e51b815260206004820152601f60248201527f696e626f7820696e70757420696e646578206f7574206f6620626f756e647300604482015260640161034e565b60006108718585856109eb565b9050610892868284606083013560255b67ffffffffffffffff166015610a1a565b505050505050565b6040516303fbaf7360e01b8152600260048201526024810182905260009073__$f57eb21c11c6dae369da3ca36f4f48eb77$__906303fbaf7390604401602060405180830381865af41580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da91906110f6565b6001546001600160a01b031633146105715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006109d08484610d43565b90506109e485828460808301356025610881565b5050505050565b6060838383604051602001610a0293929190611079565b60405160208183030381529060405290509392505050565b6040805160608089013560208301526080808a01359383019390935260a0890135908201528591016040516020818303038152906040528051906020012014610a9b5760405162461bcd60e51b81526020600482015260136024820152720d2dcc6dee4e4cac6e840cae0dec6d090c2e6d606b1b604482015260640161034e565b8273__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610ad7610ac660208b018b611016565b60051b681fffffffffffffffe01690565b60058660408c0135610aec60e08e018e611118565b6040518763ffffffff1660e01b8152600401610b0d96959493929190611162565b602060405180830381865af4158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e91906111c6565b14610b9b5760405162461bcd60e51b815260206004820152601e60248201527f696e636f7272656374206f75747075747345706f6368526f6f74486173680000604482015260640161034e565b600073__$2a7ef22e717e9afc55afc95d018bf1a85b$__63c84583a18780519060200120604051602001610bd191815260200190565b60408051601f19818403018152908290526001600160e01b031960e084901b168252610c02916005906004016111df565b602060405180830381865af4158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4391906111c6565b9050866040013573__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610c7a8a6020016020810190610ac69190611016565b60058686610c8b60c08f018f611118565b6040518763ffffffff1660e01b8152600401610cac96959493929190611162565b602060405180830381865af4158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced91906111c6565b14610d3a5760405162461bcd60e51b815260206004820152601e60248201527f696e636f7272656374206f7574707574486173686573526f6f74486173680000604482015260640161034e565b50505050505050565b60608282604051602001610d5892919061123e565b604051602081830303815290604052905092915050565b6001600160a01b038116811461065657600080fd5b60008083601f840112610d9657600080fd5b50813567ffffffffffffffff811115610dae57600080fd5b602083019150836020828501011115610dc657600080fd5b9250929050565b600060408284031215610ddf57600080fd5b50919050565b60008060008060608587031215610dfb57600080fd5b8435610e0681610d6f565b9350602085013567ffffffffffffffff80821115610e2357600080fd5b610e2f88838901610d84565b90955093506040870135915080821115610e4857600080fd5b50610e5587828801610dcd565b91505092959194509250565b600080600080600060808688031215610e7957600080fd5b8535610e8481610d6f565b94506020860135610e9481610d6f565b935060408601359250606086013567ffffffffffffffff811115610eb757600080fd5b610ec388828901610d84565b969995985093965092949392505050565b60008060408385031215610ee757600080fd5b8235610ef281610d6f565b946020939093013593505050565b600080600060408486031215610f1557600080fd5b833567ffffffffffffffff80821115610f2d57600080fd5b610f3987838801610d84565b90955093506020860135915080821115610f5257600080fd5b50610f5f86828701610dcd565b9150509250925092565b60008060408385031215610f7c57600080fd5b50508035926020909101359150565b600060208284031215610f9d57600080fd5b8135610fa881610d6f565b9392505050565b6000808335601e19843603018112610fc657600080fd5b83018035915067ffffffffffffffff821115610fe157600080fd5b602001915036819003821315610dc657600080fd5b6000823560fe1983360301811261100c57600080fd5b9190910192915050565b60006020828403121561102857600080fd5b813567ffffffffffffffff81168114610fa857600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009061109e9083018486611050565b95945050505050565b6000806000606084860312156110bc57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156105da57634e487b7160e01b600052601160045260246000fd5b60006020828403121561110857600080fd5b81518015158114610fa857600080fd5b6000808335601e1984360301811261112f57600080fd5b83018035915067ffffffffffffffff82111561114a57600080fd5b6020019150600581901b3603821315610dc657600080fd5b67ffffffffffffffff878116825286166020820152604081018590526060810184905260a060808201819052810182905260006001600160fb1b038311156111a957600080fd5b8260051b808560c08501379190910160c001979650505050505050565b6000602082840312156111d857600080fd5b5051919050565b604081526000835180604084015260005b8181101561120d57602081870181015160608684010152016111f0565b506000606082850101526060601f19601f83011684010191505067ffffffffffffffff831660208301529392505050565b60208152600061047b60208301848661105056fea264697066735822122070feffbe13eb7a8885b789e4c69147c7a06808b9e3e61caaf2f7997965a1610464736f6c63430008130033",
    "linkReferences": {
        "@cartesi/util/contracts/Bitmask.sol": {
            "Bitmask": [
                {
                    "length": 20,
                    "start": 1863
                },
                {
                    "length": 20,
                    "start": 3089
                }
            ]
        },
        "@cartesi/util/contracts/MerkleV2.sol": {
            "MerkleV2": [
                {
                    "length": 20,
                    "start": 3571
                },
                {
                    "length": 20,
                    "start": 3828
                },
                {
                    "length": 20,
                    "start": 4001
                }
            ]
        }
    },
    "deployedLinkReferences": {
        "@cartesi/util/contracts/Bitmask.sol": {
            "Bitmask": [
                {
                    "length": 20,
                    "start": 1233
                },
                {
                    "length": 20,
                    "start": 2459
                }
            ]
        },
        "@cartesi/util/contracts/MerkleV2.sol": {
            "MerkleV2": [
                {
                    "length": 20,
                    "start": 2941
                },
                {
                    "length": 20,
                    "start": 3198
                },
                {
                    "length": 20,
                    "start": 3371
                }
            ]
        }
    },
    "devdoc": {
        "events": {
            "NewConsensus(address)": {
                "details": "MUST be triggered on a successful call to `migrateToConsensus`.",
                "params": {
                    "newConsensus": "The new consensus contract"
                }
            },
            "VoucherExecuted(uint256)": {
                "params": {
                    "voucherId": "A number that uniquely identifies the voucher                  amongst all vouchers emitted by this DApp"
                }
            }
        },
        "kind": "dev",
        "methods": {
            "constructor": {
                "details": "Calls the `join` function on `_consensus`.",
                "params": {
                    "_consensus": "The initial consensus contract",
                    "_owner": "The initial DApp owner",
                    "_templateHash": "The initial machine state hash"
                }
            },
            "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
                "details": "On a successful execution, emits a `VoucherExecuted` event.",
                "params": {
                    "_destination": "The address that will receive the payload through a message call",
                    "_payload": "The payload, which—in the case of Solidity contracts—encodes a function call",
                    "_proof": "The proof used to validate the voucher against               a claim submitted by the current consensus contract"
                },
                "returns": {
                    "_0": "Whether the execution was successful or not"
                }
            },
            "getConsensus()": {
                "returns": {
                    "_0": "The current consensus"
                }
            },
            "getTemplateHash()": {
                "returns": {
                    "_0": "The DApp's template hash"
                }
            },
            "migrateToConsensus(address)": {
                "details": "Can only be called by the DApp owner.",
                "params": {
                    "_newConsensus": "The new consensus"
                }
            },
            "onERC721Received(address,address,uint256,bytes)": {
                "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
            },
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "supportsInterface(bytes4)": {
                "details": "See {IERC165-supportsInterface}."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            },
            "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
                "params": {
                    "_notice": "The notice",
                    "_proof": "Data for validating outputs"
                },
                "returns": {
                    "_0": "Whether the notice is valid or not"
                }
            },
            "wasVoucherExecuted(uint256,uint256)": {
                "params": {
                    "_inboxInputIndex": "The index of the input in the input box",
                    "_outputIndex": "The index of output emitted by the input"
                },
                "returns": {
                    "_0": "Whether the voucher has been executed before"
                }
            },
            "withdrawEther(address,uint256)": {
                "details": "This function can only be called by the DApp itself through vouchers.",
                "params": {
                    "_receiver": "The address which will receive the amount of Ether",
                    "_value": "The amount of Ether to be transferred in Wei"
                }
            }
        },
        "stateVariables": {
            "consensus": {
                "details": "See the `getConsensus` and `migrateToConsensus` functions."
            },
            "templateHash": {
                "details": "See the `getTemplateHash` function."
            },
            "voucherBitmask": {
                "details": "See the `wasVoucherExecuted` function."
            }
        },
        "title": "Cartesi DApp",
        "version": 1
    },
    "userdoc": {
        "events": {
            "NewConsensus(address)": {
                "notice": "The DApp has migrated to another consensus contract."
            },
            "VoucherExecuted(uint256)": {
                "notice": "A voucher was executed from the DApp."
            }
        },
        "kind": "user",
        "methods": {
            "constructor": {
                "notice": "Creates a `CartesiDApp` contract."
            },
            "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
                "notice": "Try to execute a voucher. Reverts if voucher was already successfully executed."
            },
            "getConsensus()": {
                "notice": "Get the current consensus."
            },
            "getTemplateHash()": {
                "notice": "Get the DApp's template hash."
            },
            "migrateToConsensus(address)": {
                "notice": "Migrate the DApp to a new consensus."
            },
            "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
                "notice": "Validate a notice."
            },
            "wasVoucherExecuted(uint256,uint256)": {
                "notice": "Check whether a voucher has been executed."
            },
            "withdrawEther(address,uint256)": {
                "notice": "Transfer some amount of Ether to some recipient."
            }
        },
        "notice": "This contract acts as the base layer incarnation of a DApp running on the execution layer. The DApp is hereby able to interact with other smart contracts through the execution of vouchers and the validation of notices. These outputs are generated by the DApp backend on the execution layer and can be proven in the base layer thanks to claims submitted by a consensus contract. A voucher is a one-time message call to another contract. It can encode asset transfers, approvals, or any other message call that doesn't require Ether to be sent along. A voucher will only be consumed if the underlying message call succeeds (that is, it doesn't revert). Furthermore, the return data of the message call is discarded entirely. As a protective measure against reentrancy attacks, nested voucher executions are prohibited. A notice, on the other hand, constitutes an arbitrary piece of data that can be proven any number of times. On their own, they do not trigger any type of contract-to-contract interaction. Rather, they merely serve to attest off-chain results, e.g. which player won a particular chess match. Every DApp is subscribed to a consensus contract, and governed by a single address, the owner. The consensus has the power of submitting claims, which, in turn, are used to validate vouchers and notices. Meanwhile, the owner has complete power over the DApp, as it can replace the consensus at any time. Therefore, the users of a DApp must trust both the consensus and the DApp owner. The DApp developer can choose whichever ownership and consensus models it wants. Examples of DApp ownership models include: * no owner (address zero) * individual signer (externally-owned account) * multiple signers (multi-sig) * DAO (decentralized autonomous organization) * self-owned DApp (off-chain governance logic) See `IConsensus` for examples of consensus models. This contract inherits the following OpenZeppelin contracts. For more information, please consult OpenZeppelin's official documentation. * `Ownable` * `ERC721Holder` * `ERC1155Holder` * `ReentrancyGuard`",
        "version": 1
    },
    "evm": {
        "gasEstimates": {
            "creation": {
                "codeDepositCost": "1113200",
                "executionCost": "infinite",
                "totalCost": "infinite"
            },
            "external": {
                "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "infinite",
                "getConsensus()": "2343",
                "getTemplateHash()": "infinite",
                "migrateToConsensus(address)": "infinite",
                "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
                "onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
                "onERC721Received(address,address,uint256,bytes)": "infinite",
                "owner()": "2354",
                "renounceOwnership()": "infinite",
                "supportsInterface(bytes4)": "450",
                "transferOwnership(address)": "infinite",
                "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "infinite",
                "wasVoucherExecuted(uint256,uint256)": "infinite",
                "withdrawEther(address,uint256)": "infinite"
            },
            "internal": {
                "_wasVoucherExecuted(uint256)": "infinite",
                "getClaim(bytes calldata)": "infinite"
            }
        },
        "methodIdentifiers": {
            "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "1250482f",
            "getConsensus()": "179e740b",
            "getTemplateHash()": "61b12c66",
            "migrateToConsensus(address)": "fc411683",
            "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
            "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
            "onERC721Received(address,address,uint256,bytes)": "150b7a02",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "supportsInterface(bytes4)": "01ffc9a7",
            "transferOwnership(address)": "f2fde38b",
            "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "96487d46",
            "wasVoucherExecuted(uint256,uint256)": "9d9b1145",
            "withdrawEther(address,uint256)": "522f6815"
        }
    }
}
