{
  "contractName": "ICartesiDApp",
  "sourceName": "contracts/dapp/ICartesiDApp.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IConsensus",
          "name": "newConsensus",
          "type": "address"
        }
      ],
      "name": "NewConsensus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "voucherId",
          "type": "uint256"
        }
      ],
      "name": "VoucherExecuted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "inputIndexWithinEpoch",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "outputIndexWithinInput",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "outputHashesRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "vouchersEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "noticesEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "machineStateHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashInOutputHashesSiblings",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashesInEpochSiblings",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct OutputValidityProof",
              "name": "validity",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            }
          ],
          "internalType": "struct Proof",
          "name": "_proof",
          "type": "tuple"
        }
      ],
      "name": "executeVoucher",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConsensus",
      "outputs": [
        {
          "internalType": "contract IConsensus",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTemplateHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IConsensus",
          "name": "_newConsensus",
          "type": "address"
        }
      ],
      "name": "migrateToConsensus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_notice",
          "type": "bytes"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "inputIndexWithinEpoch",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "outputIndexWithinInput",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "outputHashesRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "vouchersEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "noticesEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "machineStateHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashInOutputHashesSiblings",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashesInEpochSiblings",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct OutputValidityProof",
              "name": "validity",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            }
          ],
          "internalType": "struct Proof",
          "name": "_proof",
          "type": "tuple"
        }
      ],
      "name": "validateNotice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inputIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_outputIndexWithinInput",
          "type": "uint256"
        }
      ],
      "name": "wasVoucherExecuted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "events": {
      "NewConsensus(address)": {
        "details": "MUST be triggered on a successful call to `migrateToConsensus`.",
        "params": {
          "newConsensus": "The new consensus contract"
        }
      },
      "VoucherExecuted(uint256)": {
        "params": {
          "voucherId": "A number that uniquely identifies the voucher                  amongst all vouchers emitted by this DApp"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "details": "On a successful execution, emits a `VoucherExecuted` event.      Execution of already executed voucher will raise a `VoucherReexecutionNotAllowed` error.",
        "params": {
          "_destination": "The address that will receive the payload through a message call",
          "_payload": "The payload, which—in the case of Solidity contracts—encodes a function call",
          "_proof": "The proof used to validate the voucher against               a claim submitted by the current consensus contract"
        },
        "returns": {
          "_0": "Whether the execution was successful or not"
        }
      },
      "getConsensus()": {
        "returns": {
          "_0": "The current consensus"
        }
      },
      "getTemplateHash()": {
        "returns": {
          "_0": "The DApp's template hash"
        }
      },
      "migrateToConsensus(address)": {
        "details": "Can only be called by the DApp owner.",
        "params": {
          "_newConsensus": "The new consensus"
        }
      },
      "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "params": {
          "_notice": "The notice",
          "_proof": "Data for validating outputs"
        },
        "returns": {
          "_0": "Whether the notice is valid or not"
        }
      },
      "wasVoucherExecuted(uint256,uint256)": {
        "params": {
          "_inputIndex": "The index of the input in the input box",
          "_outputIndexWithinInput": "The index of output emitted by the input"
        },
        "returns": {
          "_0": "Whether the voucher has been executed before"
        }
      }
    },
    "title": "Cartesi DApp interface",
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewConsensus(address)": {
        "notice": "The DApp has migrated to another consensus contract."
      },
      "VoucherExecuted(uint256)": {
        "notice": "A voucher was executed from the DApp."
      }
    },
    "kind": "user",
    "methods": {
      "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "notice": "Try to execute a voucher. Reverts if voucher was already successfully executed."
      },
      "getConsensus()": {
        "notice": "Get the current consensus."
      },
      "getTemplateHash()": {
        "notice": "Get the DApp's template hash."
      },
      "migrateToConsensus(address)": {
        "notice": "Migrate the DApp to a new consensus."
      },
      "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "notice": "Validate a notice."
      },
      "wasVoucherExecuted(uint256,uint256)": {
        "notice": "Check whether a voucher has been executed."
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": null,
    "methodIdentifiers": {
      "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "1250482f",
      "getConsensus()": "179e740b",
      "getTemplateHash()": "61b12c66",
      "migrateToConsensus(address)": "fc411683",
      "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "96487d46",
      "wasVoucherExecuted(uint256,uint256)": "9d9b1145"
    }
  }
}