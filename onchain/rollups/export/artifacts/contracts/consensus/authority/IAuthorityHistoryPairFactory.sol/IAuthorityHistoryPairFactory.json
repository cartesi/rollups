{
  "contractName": "IAuthorityHistoryPairFactory",
  "sourceName": "contracts/consensus/authority/IAuthorityHistoryPairFactory.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IAuthorityFactory",
          "name": "authorityFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IHistoryFactory",
          "name": "historyFactory",
          "type": "address"
        }
      ],
      "name": "AuthorityHistoryPairFactoryCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authorityOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "calculateAuthorityHistoryAddressPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorityFactory",
      "outputs": [
        {
          "internalType": "contract IAuthorityFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHistoryFactory",
      "outputs": [
        {
          "internalType": "contract IHistoryFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authorityOwner",
          "type": "address"
        }
      ],
      "name": "newAuthorityHistoryPair",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract History",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authorityOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "newAuthorityHistoryPair",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract History",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "events": {
      "AuthorityHistoryPairFactoryCreated(address,address)": {
        "details": "MUST be emitted on construction.",
        "params": {
          "authorityFactory": "The underlying `Authority` factory",
          "historyFactory": "The underlying `History` factory"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "calculateAuthorityHistoryAddressPair(address,bytes32)": {
        "details": "Beware that only the `newAuthorityHistoryPair` function with the `_salt` parameter      is able to deterministically deploy an authority-history pair.",
        "params": {
          "_authorityOwner": "The initial authority owner",
          "_salt": "The salt used to deterministically generate the authority-history address pair"
        },
        "returns": {
          "_0": "The deterministic authority address",
          "_1": "The deterministic history address"
        }
      },
      "getAuthorityFactory()": {
        "returns": {
          "_0": "The `Authority` factory"
        }
      },
      "getHistoryFactory()": {
        "returns": {
          "_0": "The `History` factory"
        }
      },
      "newAuthorityHistoryPair(address)": {
        "params": {
          "_authorityOwner": "The initial authority owner"
        },
        "returns": {
          "_0": "The authority",
          "_1": "The history"
        }
      },
      "newAuthorityHistoryPair(address,bytes32)": {
        "params": {
          "_authorityOwner": "The initial authority owner",
          "_salt": "The salt used to deterministically generate the authority-history pair address"
        },
        "returns": {
          "_0": "The authority",
          "_1": "The history"
        }
      }
    },
    "title": "Authority-History Pair Factory interface",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AuthorityHistoryPairFactoryCreated(address,address)": {
        "notice": "The factory was created."
      }
    },
    "kind": "user",
    "methods": {
      "calculateAuthorityHistoryAddressPair(address,bytes32)": {
        "notice": "Calculate the address of an authority-history pair to be deployed deterministically."
      },
      "getAuthorityFactory()": {
        "notice": "Get the factory used to deploy `Authority` contracts"
      },
      "getHistoryFactory()": {
        "notice": "Get the factory used to deploy `History` contracts"
      },
      "newAuthorityHistoryPair(address)": {
        "notice": "Deploy a new authority-history pair."
      },
      "newAuthorityHistoryPair(address,bytes32)": {
        "notice": "Deploy a new authority-history pair deterministically."
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": null,
    "methodIdentifiers": {
      "calculateAuthorityHistoryAddressPair(address,bytes32)": "39dcd457",
      "getAuthorityFactory()": "75689f83",
      "getHistoryFactory()": "f16b1a5c",
      "newAuthorityHistoryPair(address)": "b05cd1dc",
      "newAuthorityHistoryPair(address,bytes32)": "d73f347a"
    }
  }
}