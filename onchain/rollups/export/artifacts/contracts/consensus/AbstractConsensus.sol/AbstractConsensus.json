{
  "contractName": "AbstractConsensus",
  "sourceName": "contracts/consensus/AbstractConsensus.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "application",
          "type": "address"
        }
      ],
      "name": "ApplicationJoined",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dapp",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_proofContext",
          "type": "bytes"
        }
      ],
      "name": "getClaim",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "epochHash_",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "firstInputIndex_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastInputIndex_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "events": {
      "ApplicationJoined(address)": {
        "details": "MUST be triggered on a successful call to `join`.",
        "params": {
          "application": "The application"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "getClaim(address,bytes)": {
        "params": {
          "_dapp": "The DApp address",
          "_proofContext": "Data for retrieving the desired claim"
        },
        "returns": {
          "epochHash_": "The claimed epoch hash",
          "firstInputIndex_": "The index of the first input of the epoch in the input box",
          "lastInputIndex_": "The index of the last input of the epoch in the input box"
        }
      }
    },
    "title": "Abstract Consensus",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ApplicationJoined(address)": {
        "notice": "An application has joined the consensus' validation set."
      }
    },
    "kind": "user",
    "methods": {
      "getClaim(address,bytes)": {
        "notice": "Get a specific claim regarding a specific DApp.         The encoding of `_proofContext` might vary         depending on the implementation."
      },
      "join()": {
        "notice": "Emits an `ApplicationJoined` event with the message sender."
      }
    },
    "notice": "An abstract contract that partially implements `IConsensus`.",
    "version": 1
  },
  "evm": {
    "gasEstimates": null,
    "methodIdentifiers": {
      "getClaim(address,bytes)": "d79a8240",
      "join()": "b688a363"
    }
  }
}