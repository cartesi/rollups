{
    "contractName": "History",
    "sourceName": "contracts/history/History.sol",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "dapp",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "epochHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint128",
                            "name": "firstIndex",
                            "type": "uint128"
                        },
                        {
                            "internalType": "uint128",
                            "name": "lastIndex",
                            "type": "uint128"
                        }
                    ],
                    "indexed": false,
                    "internalType": "struct History.Claim",
                    "name": "claim",
                    "type": "tuple"
                }
            ],
            "name": "NewClaimToHistory",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_dapp",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_proofContext",
                    "type": "bytes"
                }
            ],
            "name": "getClaim",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_consensus",
                    "type": "address"
                }
            ],
            "name": "migrateToConsensus",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "_claimData",
                    "type": "bytes"
                }
            ],
            "name": "submitClaim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b5060405161091f38038061091f83398101604081905261002f91610181565b61003833610057565b6001600160a01b038116331461005157610051816100a7565b506101b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100af610125565b6001600160a01b0381166101195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61012281610057565b50565b6000546001600160a01b0316331461017f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610110565b565b60006020828403121561019357600080fd5b81516001600160a01b03811681146101aa57600080fd5b9392505050565b61075f806101c06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063d79a824014610091578063ddfdfbb0146100bf578063f2fde38b146100d2578063fc411683146100e5575b600080fd5b61006f6100f8565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a461009f36600461052f565b61010c565b60408051938452602084019290925290820152606001610088565b61006f6100cd366004610584565b6101a5565b61006f6100e03660046105c6565b61039d565b61006f6100f33660046105c6565b610416565b610100610427565b61010a6000610481565b565b600080808061011d858701876105ea565b6001600160a01b0388166000908152600160205260408120805492935090918390811061014c5761014c610603565b60009182526020918290206040805160608101825260029390930290910180548084526001909101546001600160801b03808216958501869052600160801b90910416929091018290529a919950975095505050505050565b6101ad610427565b6000806101bc83850185610635565b9150915080604001516001600160801b031681602001516001600160801b031611156102225760405162461bcd60e51b815260206004820152601060248201526f486973746f72793a204649203e204c4960801b60448201526064015b60405180910390fd5b6001600160a01b038216600090815260016020526040902080548015610294578161024e6001836106e9565b8154811061025e5761025e610603565b906000526020600020906002020160010160109054906101000a90046001600160801b0316600161028f9190610702565b610297565b60005b6001600160801b031683602001516001600160801b0316146102fb5760405162461bcd60e51b815260206004820152601960248201527f486973746f72793a20756e636c61696d656420696e70757473000000000000006044820152606401610219565b8154600180820184556000848152602090819020865160029094020183815586820180516040808a0180516001600160801b03938416600160801b9185169190910217949096019390935582519586529051811692850192909252915116908201526001600160a01b038516907fb71880d7a0c514d48c0296b2721b0a4f9641a45117960f2ca86b5b7873c4ab2f9060600160405180910390a2505050505050565b6103a5610427565b6001600160a01b03811661040a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610219565b61041381610481565b50565b61041e610427565b6104138161039d565b6000546001600160a01b0316331461010a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461041357600080fd5b60008083601f8401126104f857600080fd5b50813567ffffffffffffffff81111561051057600080fd5b60208301915083602082850101111561052857600080fd5b9250929050565b60008060006040848603121561054457600080fd5b833561054f816104d1565b9250602084013567ffffffffffffffff81111561056b57600080fd5b610577868287016104e6565b9497909650939450505050565b6000806020838503121561059757600080fd5b823567ffffffffffffffff8111156105ae57600080fd5b6105ba858286016104e6565b90969095509350505050565b6000602082840312156105d857600080fd5b81356105e3816104d1565b9392505050565b6000602082840312156105fc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b80356001600160801b038116811461063057600080fd5b919050565b600080828403608081121561064957600080fd5b8335610654816104d1565b92506060601f198201121561066857600080fd5b506040516060810181811067ffffffffffffffff8211171561069a57634e487b7160e01b600052604160045260246000fd5b8060405250602084013581526106b260408501610619565b60208201526106c360608501610619565b6040820152809150509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106fc576106fc6106d3565b92915050565b6001600160801b03818116838216019080821115610722576107226106d3565b509291505056fea264697066735822122076c3af5c5c1226bc8dc5276ccce173bcb3016363ce815a026f7ead0b4bbaabbd64736f6c63430008130033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063d79a824014610091578063ddfdfbb0146100bf578063f2fde38b146100d2578063fc411683146100e5575b600080fd5b61006f6100f8565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a461009f36600461052f565b61010c565b60408051938452602084019290925290820152606001610088565b61006f6100cd366004610584565b6101a5565b61006f6100e03660046105c6565b61039d565b61006f6100f33660046105c6565b610416565b610100610427565b61010a6000610481565b565b600080808061011d858701876105ea565b6001600160a01b0388166000908152600160205260408120805492935090918390811061014c5761014c610603565b60009182526020918290206040805160608101825260029390930290910180548084526001909101546001600160801b03808216958501869052600160801b90910416929091018290529a919950975095505050505050565b6101ad610427565b6000806101bc83850185610635565b9150915080604001516001600160801b031681602001516001600160801b031611156102225760405162461bcd60e51b815260206004820152601060248201526f486973746f72793a204649203e204c4960801b60448201526064015b60405180910390fd5b6001600160a01b038216600090815260016020526040902080548015610294578161024e6001836106e9565b8154811061025e5761025e610603565b906000526020600020906002020160010160109054906101000a90046001600160801b0316600161028f9190610702565b610297565b60005b6001600160801b031683602001516001600160801b0316146102fb5760405162461bcd60e51b815260206004820152601960248201527f486973746f72793a20756e636c61696d656420696e70757473000000000000006044820152606401610219565b8154600180820184556000848152602090819020865160029094020183815586820180516040808a0180516001600160801b03938416600160801b9185169190910217949096019390935582519586529051811692850192909252915116908201526001600160a01b038516907fb71880d7a0c514d48c0296b2721b0a4f9641a45117960f2ca86b5b7873c4ab2f9060600160405180910390a2505050505050565b6103a5610427565b6001600160a01b03811661040a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610219565b61041381610481565b50565b61041e610427565b6104138161039d565b6000546001600160a01b0316331461010a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461041357600080fd5b60008083601f8401126104f857600080fd5b50813567ffffffffffffffff81111561051057600080fd5b60208301915083602082850101111561052857600080fd5b9250929050565b60008060006040848603121561054457600080fd5b833561054f816104d1565b9250602084013567ffffffffffffffff81111561056b57600080fd5b610577868287016104e6565b9497909650939450505050565b6000806020838503121561059757600080fd5b823567ffffffffffffffff8111156105ae57600080fd5b6105ba858286016104e6565b90969095509350505050565b6000602082840312156105d857600080fd5b81356105e3816104d1565b9392505050565b6000602082840312156105fc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b80356001600160801b038116811461063057600080fd5b919050565b600080828403608081121561064957600080fd5b8335610654816104d1565b92506060601f198201121561066857600080fd5b506040516060810181811067ffffffffffffffff8211171561069a57634e487b7160e01b600052604160045260246000fd5b8060405250602084013581526106b260408501610619565b60208201526106c360608501610619565b6040820152809150509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106fc576106fc6106d3565b92915050565b6001600160801b03818116838216019080821115610722576107226106d3565b509291505056fea264697066735822122076c3af5c5c1226bc8dc5276ccce173bcb3016363ce815a026f7ead0b4bbaabbd64736f6c63430008130033",
    "linkReferences": {},
    "deployedLinkReferences": {},
    "devdoc": {
        "details": "This contract inherits OpenZeppelin's `Ownable` contract.      For more information on `Ownable`, please consult OpenZeppelin's official documentation.",
        "events": {
            "NewClaimToHistory(address,(bytes32,uint128,uint128))": {
                "details": "MUST be triggered on a successful call to `submitClaim`.",
                "params": {
                    "claim": "The newly-submitted claim",
                    "dapp": "The address of the DApp"
                }
            }
        },
        "kind": "dev",
        "methods": {
            "constructor": {
                "params": {
                    "_owner": "The initial owner"
                }
            },
            "getClaim(address,bytes)": {
                "params": {
                    "_dapp": "The DApp address",
                    "_proofContext": "Data for retrieving the desired claim"
                },
                "returns": {
                    "_0": "The claimed epoch hash",
                    "_1": "The index of the first input of the epoch in the input box",
                    "_2": "The index of the last input of the epoch in the input box"
                }
            },
            "migrateToConsensus(address)": {
                "details": "Emits an `OwnershipTransferred` event. Should have access control.",
                "params": {
                    "_consensus": "The new consensus"
                }
            },
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "submitClaim(bytes)": {
                "details": "Emits a `NewClaimToHistory` event. Should have access control.",
                "params": {
                    "_claimData": "Data for submitting a claim"
                }
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "stateVariables": {
            "claims": {
                "details": "See the `getClaim` and `submitClaim` functions."
            }
        },
        "title": "Simple History",
        "version": 1
    },
    "userdoc": {
        "events": {
            "NewClaimToHistory(address,(bytes32,uint128,uint128))": {
                "notice": "A new claim regarding a specific DApp was submitted."
            }
        },
        "kind": "user",
        "methods": {
            "constructor": {
                "notice": "Creates a `History` contract."
            },
            "getClaim(address,bytes)": {
                "notice": "Get a specific claim regarding a specific DApp. There are several requirements for this function to be called successfully. * `_proofContext` MUST be well-encoded. In Solidity, it can be constructed   as `abi.encode(claimIndex)`, where `claimIndex` is the claim index (type `uint256`). * `claimIndex` MUST be inside the interval `[0, n)` where `n` is the number of claims   that have been submitted to `_dapp` already."
            },
            "migrateToConsensus(address)": {
                "notice": "Transfer ownership to another consensus."
            },
            "submitClaim(bytes)": {
                "notice": "Submit a claim regarding a DApp. There are several requirements for this function to be called successfully. * `_claimData` MUST be well-encoded. In Solidity, it can be constructed   as `abi.encode(dapp, claim)`, where `dapp` is the DApp address (type `address`)   and `claim` is the claim structure (type `Claim`). * `firstIndex` MUST be less than or equal to `lastIndex`.   As a result, every claim MUST encompass AT LEAST one input. * If this is the DApp's first claim, then `firstIndex` MUST be `0`.   Otherwise, `firstIndex` MUST be the `lastClaim.lastIndex + 1`.   In other words, claims MUST NOT skip inputs."
            }
        },
        "notice": "This contract stores claims for each DApp individually. This means that, for each DApp, the contract stores an array of `Claim` entries, where each `Claim` is composed of: * An epoch hash (`bytes32`) * A closed interval of input indices (`uint128`, `uint128`) The contract guarantees that the first interval starts at index 0, and that the following intervals don't have gaps or overlaps. Furthermore, claims can only be submitted by the contract owner through `submitClaim`, but can be retrieved by anyone with `getClaim`.",
        "version": 1
    },
    "evm": {
        "gasEstimates": {
            "creation": {
                "codeDepositCost": "377400",
                "executionCost": "infinite",
                "totalCost": "infinite"
            },
            "external": {
                "getClaim(address,bytes)": "7441",
                "migrateToConsensus(address)": "infinite",
                "owner()": "2290",
                "renounceOwnership()": "infinite",
                "submitClaim(bytes)": "infinite",
                "transferOwnership(address)": "infinite"
            }
        },
        "methodIdentifiers": {
            "getClaim(address,bytes)": "d79a8240",
            "migrateToConsensus(address)": "fc411683",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "submitClaim(bytes)": "ddfdfbb0",
            "transferOwnership(address)": "f2fde38b"
        }
    }
}
