{
  "contractName": "LibOutputValidation",
  "sourceName": "contracts/library/LibOutputValidation.sol",
  "abi": [
    {
      "inputs": [],
      "name": "IncorrectEpochHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectOutputHashesRootHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectOutputsEpochRootHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputIndexOutOfClaimBounds",
      "type": "error"
    }
  ],
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012d1df38d85394b26ba2b48622702197cdc35be000f979ae3bd6440aa6c73afd64736f6c63430008130033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012d1df38d85394b26ba2b48622702197cdc35be000f979ae3bd6440aa6c73afd64736f6c63430008130033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Output Validation Library",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "IncorrectEpochHash()": [
        {
          "notice": "Raised when some `OutputValidityProof` variables does not match         the presented finalized epoch."
        }
      ],
      "IncorrectOutputHashesRootHash()": [
        {
          "notice": "Raised when Merkle root of output hash is NOT contained         in the output metadata array memory range."
        }
      ],
      "IncorrectOutputsEpochRootHash()": [
        {
          "notice": "Raised when `OutputValidityProof` metadata memory range is NOT         contained in epoch's output memory range."
        }
      ],
      "InputIndexOutOfClaimBounds()": [
        {
          "notice": "Raised when epoch input index is NOT compatible with the         provided input index range."
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "17200",
        "executionCost": "103",
        "totalCost": "17303"
      },
      "internal": {
        "getBitMaskPosition(uint256,uint256)": "infinite",
        "validateEncodedOutput(struct OutputValidityProof calldata,bytes memory,bytes32,bytes32,uint256,uint256)": "infinite",
        "validateInputIndexRange(struct OutputValidityProof calldata,uint256,uint256)": "infinite",
        "validateNotice(struct OutputValidityProof calldata,bytes calldata,bytes32)": "infinite",
        "validateVoucher(struct OutputValidityProof calldata,address,bytes calldata,bytes32)": "infinite"
      }
    },
    "methodIdentifiers": {}
  }
}