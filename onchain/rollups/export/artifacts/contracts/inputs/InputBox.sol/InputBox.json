{
  "contractName": "InputBox",
  "sourceName": "contracts/inputs/InputBox.sol",
  "abi": [
    {
      "inputs": [],
      "name": "InputSizeExceedsLimit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dapp",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "inputIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        }
      ],
      "name": "InputAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dapp",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_input",
          "type": "bytes"
        }
      ],
      "name": "addInput",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dapp",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getInputHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dapp",
          "type": "address"
        }
      ],
      "name": "getNumberOfInputs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506103be806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631789cd631461004657806361a93c871461006b578063677087c914610094575b600080fd5b610059610054366004610253565b6100a7565b60405190815260200160405180910390f35b6100596100793660046102d6565b6001600160a01b031660009081526020819052604090205490565b6100596100a23660046102f8565b61013b565b6001600160a01b03831660009081526020819052604081208054826100d0334342898987610178565b83546001810185556000858152602090200181905560405190915082906001600160a01b038916907f6aaa400068bf4ca337265e2a1e1e841f66b8597fd5b452fdc52a44bed28a0784906101299033908b908b90610322565b60405180910390a39695505050505050565b6001600160a01b038216600090815260208190526040812080548390811061016557610165610362565b9060005260206000200154905092915050565b6000621fffc083111561019e57604051634273a49560e11b815260040160405180910390fd5b604080516001600160a01b03891660208201529081018790526060810186905260006080820181905260a082018490529060c001604051602081830303815290604052805190602001209050600085856040516101fc929190610378565b604080519182900382206020808401959095528282015280518083038201815260609092019052805192019190912098975050505050505050565b80356001600160a01b038116811461024e57600080fd5b919050565b60008060006040848603121561026857600080fd5b61027184610237565b9250602084013567ffffffffffffffff8082111561028e57600080fd5b818601915086601f8301126102a257600080fd5b8135818111156102b157600080fd5b8760208285010111156102c357600080fd5b6020830194508093505050509250925092565b6000602082840312156102e857600080fd5b6102f182610237565b9392505050565b6000806040838503121561030b57600080fd5b61031483610237565b946020939093013593505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b818382376000910190815291905056fea264697066735822122043b0a58952371efb5f75573ec65e82305da7154e6338f4e9c00f5cc07f92c4af64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80631789cd631461004657806361a93c871461006b578063677087c914610094575b600080fd5b610059610054366004610253565b6100a7565b60405190815260200160405180910390f35b6100596100793660046102d6565b6001600160a01b031660009081526020819052604090205490565b6100596100a23660046102f8565b61013b565b6001600160a01b03831660009081526020819052604081208054826100d0334342898987610178565b83546001810185556000858152602090200181905560405190915082906001600160a01b038916907f6aaa400068bf4ca337265e2a1e1e841f66b8597fd5b452fdc52a44bed28a0784906101299033908b908b90610322565b60405180910390a39695505050505050565b6001600160a01b038216600090815260208190526040812080548390811061016557610165610362565b9060005260206000200154905092915050565b6000621fffc083111561019e57604051634273a49560e11b815260040160405180910390fd5b604080516001600160a01b03891660208201529081018790526060810186905260006080820181905260a082018490529060c001604051602081830303815290604052805190602001209050600085856040516101fc929190610378565b604080519182900382206020808401959095528282015280518083038201815260609092019052805192019190912098975050505050505050565b80356001600160a01b038116811461024e57600080fd5b919050565b60008060006040848603121561026857600080fd5b61027184610237565b9250602084013567ffffffffffffffff8082111561028e57600080fd5b818601915086601f8301126102a257600080fd5b8135818111156102b157600080fd5b8760208285010111156102c357600080fd5b6020830194508093505050509250925092565b6000602082840312156102e857600080fd5b6102f182610237565b9392505050565b6000806040838503121561030b57600080fd5b61031483610237565b946020939093013593505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b818382376000910190815291905056fea264697066735822122043b0a58952371efb5f75573ec65e82305da7154e6338f4e9c00f5cc07f92c4af64736f6c63430008130033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "events": {
      "InputAdded(address,uint256,address,bytes)": {
        "details": "MUST be triggered on a successful call to `addInput`.",
        "params": {
          "dapp": "The address of the DApp",
          "input": "The contents of the input",
          "inputIndex": "The index of the input in the input box",
          "sender": "The address that sent the input"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addInput(address,bytes)": {
        "details": "MUST fire an `InputAdded` event accordingly.      Input larger than machine limit will raise `InputSizeExceedsLimit` error.",
        "params": {
          "_dapp": "The address of the DApp",
          "_input": "The contents of the input"
        },
        "returns": {
          "_0": "The hash of the input plus some extra metadata"
        }
      },
      "getInputHash(address,uint256)": {
        "details": "`_index` MUST be in the interval `[0,n)` where `n` is the number of      inputs in the DApp's input box. See the `getNumberOfInputs` function.",
        "params": {
          "_dapp": "The address of the DApp",
          "_index": "The index of the input in the DApp's input box"
        },
        "returns": {
          "_0": "The hash of the input at the provided index in the DApp's input box"
        }
      },
      "getNumberOfInputs(address)": {
        "params": {
          "_dapp": "The address of the DApp"
        },
        "returns": {
          "_0": "Number of inputs in the DApp's input box"
        }
      }
    },
    "stateVariables": {
      "inputBoxes": {
        "details": "See the `getNumberOfInputs`, `getInputHash` and `addInput` functions."
      }
    },
    "title": "Input Box",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InputSizeExceedsLimit()": [
        {
          "notice": "Raised when input is larger than the machine limit."
        }
      ]
    },
    "events": {
      "InputAdded(address,uint256,address,bytes)": {
        "notice": "Emitted when an input is added to a DApp's input box."
      }
    },
    "kind": "user",
    "methods": {
      "addInput(address,bytes)": {
        "notice": "Add an input to a DApp's input box."
      },
      "getInputHash(address,uint256)": {
        "notice": "Get the hash of an input in a DApp's input box."
      },
      "getNumberOfInputs(address)": {
        "notice": "Get the number of inputs in a DApp's input box."
      }
    },
    "notice": "Trustless and permissionless contract that receives arbitrary blobs (called \"inputs\") from anyone and adds a compound hash to an append-only list (called \"input box\"). Each DApp has its own input box. The hash that is stored on-chain is composed by the hash of the input blob, the block number and timestamp, the input sender address, and the input index. Data availability is guaranteed by the emission of `InputAdded` events on every successful call to `addInput`. This ensures that inputs can be retrieved by anyone at any time, without having to rely on centralized data providers. From the perspective of this contract, inputs are encoding-agnostic byte arrays. It is up to the DApp to interpret, validate and act upon inputs.",
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "191600",
        "executionCost": "232",
        "totalCost": "191832"
      },
      "external": {
        "addInput(address,bytes)": "infinite",
        "getInputHash(address,uint256)": "4781",
        "getNumberOfInputs(address)": "2528"
      }
    },
    "methodIdentifiers": {
      "addInput(address,bytes)": "1789cd63",
      "getInputHash(address,uint256)": "677087c9",
      "getNumberOfInputs(address)": "61a93c87"
    }
  }
}