{
  "contractName": "Create2",
  "sourceName": "@openzeppelin/contracts/utils/Create2.sol",
  "abi": [],
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fc1b3abf0f15c7051039d05bb193e29a6761594e87b533108a81b51ad00d4f764736f6c63430008130033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fc1b3abf0f15c7051039d05bb193e29a6761594e87b533108a81b51ad00d4f764736f6c63430008130033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "17200",
        "executionCost": "103",
        "totalCost": "17303"
      },
      "internal": {
        "computeAddress(bytes32,bytes32)": "infinite",
        "computeAddress(bytes32,bytes32,address)": "infinite",
        "deploy(uint256,bytes32,bytes memory)": "infinite"
      }
    },
    "methodIdentifiers": {}
  }
}